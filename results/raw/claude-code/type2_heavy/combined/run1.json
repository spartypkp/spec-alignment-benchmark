{
    "type1_missing": [],
    "type2_incorrect": [
        {
            "section": "3.1",
            "reasoning": "Authentication uses SHA256 hashing instead of bcryptjs for password hashing",
            "files": [
                "src/lib/auth.ts"
            ]
        },
        {
            "section": "3.1",
            "reasoning": "Session cookie maxAge set to 1 day (86400 seconds) instead of 7 days",
            "files": [
                "src/lib/auth.ts"
            ]
        },
        {
            "section": "4.2",
            "reasoning": "Login endpoint returns status 200 for all errors instead of proper HTTP status codes (400, 401, etc.)",
            "files": [
                "src/app/api/auth/login/route.ts"
            ]
        },
        {
            "section": "4.2",
            "reasoning": "Tasks GET endpoint returns status 200 for UNAUTHORIZED error instead of 401",
            "files": [
                "src/app/api/tasks/route.ts"
            ]
        },
        {
            "section": "4.2",
            "reasoning": "Tasks POST endpoint returns status 200 for validation and auth errors instead of 400/401",
            "files": [
                "src/app/api/tasks/route.ts"
            ]
        },
        {
            "section": "4.2",
            "reasoning": "Error response format inconsistent - login/tasks endpoints return flat 'error' string instead of structured error object with code and message",
            "files": [
                "src/app/(auth)/login/page.tsx",
                "src/app/(auth)/register/page.tsx"
            ]
        },
        {
            "section": "6.2",
            "reasoning": "PUT /api/tasks/[id] creates new duplicate task instead of updating existing task",
            "files": [
                "src/app/api/tasks/[id]/route.ts"
            ]
        },
        {
            "section": "3.2",
            "reasoning": "Toggle completion updates ALL tasks to same state instead of toggling only the clicked task",
            "files": [
                "src/app/dashboard/page.tsx"
            ]
        }
    ],
    "type3_extraneous": [
        {
            "file": "src/components/ThemeToggle.tsx",
            "reasoning": "Theme toggle component with dark/light mode switching not mentioned in specification"
        },
        {
            "file": "src/app/layout.tsx",
            "reasoning": "ThemeToggle component rendered in root layout, adding theme switching functionality not in spec"
        },
        {
            "file": "src/lib/utils.ts",
            "reasoning": "Utility file with cn() function for class merging not specified in requirements"
        },
        {
            "file": "src/lib/db.ts",
            "reasoning": "Bulk operation functions clearCompletedTasks, deleteAllTasks, and toggleAllTasks not mentioned in API specification"
        }
    ]
}